/*
Apono

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apono

import (
	"encoding/json"
)

// checks if the PermissionV3 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PermissionV3{}

// PermissionV3 struct for PermissionV3
type PermissionV3 struct {
	Name         string `json:"name"`
	Id           string `json:"id"`
	ResourceType string `json:"resource_type"`
}

// NewPermissionV3 instantiates a new PermissionV3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPermissionV3(name string, id string, resourceType string) *PermissionV3 {
	this := PermissionV3{}
	this.Name = name
	this.Id = id
	this.ResourceType = resourceType
	return &this
}

// NewPermissionV3WithDefaults instantiates a new PermissionV3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPermissionV3WithDefaults() *PermissionV3 {
	this := PermissionV3{}
	return &this
}

// GetName returns the Name field value
func (o *PermissionV3) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PermissionV3) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PermissionV3) SetName(v string) {
	o.Name = v
}

// GetId returns the Id field value
func (o *PermissionV3) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PermissionV3) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PermissionV3) SetId(v string) {
	o.Id = v
}

// GetResourceType returns the ResourceType field value
func (o *PermissionV3) GetResourceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value
// and a boolean to check if the value has been set.
func (o *PermissionV3) GetResourceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceType, true
}

// SetResourceType sets field value
func (o *PermissionV3) SetResourceType(v string) {
	o.ResourceType = v
}

func (o PermissionV3) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PermissionV3) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["id"] = o.Id
	toSerialize["resource_type"] = o.ResourceType
	return toSerialize, nil
}

type NullablePermissionV3 struct {
	value *PermissionV3
	isSet bool
}

func (v NullablePermissionV3) Get() *PermissionV3 {
	return v.value
}

func (v *NullablePermissionV3) Set(val *PermissionV3) {
	v.value = val
	v.isSet = true
}

func (v NullablePermissionV3) IsSet() bool {
	return v.isSet
}

func (v *NullablePermissionV3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePermissionV3(val *PermissionV3) *NullablePermissionV3 {
	return &NullablePermissionV3{value: val, isSet: true}
}

func (v NullablePermissionV3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePermissionV3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
Apono

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apono

import (
	"encoding/json"
	"fmt"
)

// checks if the IntegrationClientModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IntegrationClientModel{}

// IntegrationClientModel struct for IntegrationClientModel
type IntegrationClientModel struct {
	Id              string                 `json:"id"`
	Type            string                 `json:"type"`
	TypeDisplayName string                 `json:"type_display_name"`
	Name            string                 `json:"name"`
	Icons           IconsConfigClientModel `json:"icons"`
}

type _IntegrationClientModel IntegrationClientModel

// NewIntegrationClientModel instantiates a new IntegrationClientModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntegrationClientModel(id string, type_ string, typeDisplayName string, name string, icons IconsConfigClientModel) *IntegrationClientModel {
	this := IntegrationClientModel{}
	this.Id = id
	this.Type = type_
	this.TypeDisplayName = typeDisplayName
	this.Name = name
	this.Icons = icons
	return &this
}

// NewIntegrationClientModelWithDefaults instantiates a new IntegrationClientModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntegrationClientModelWithDefaults() *IntegrationClientModel {
	this := IntegrationClientModel{}
	return &this
}

// GetId returns the Id field value
func (o *IntegrationClientModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *IntegrationClientModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *IntegrationClientModel) SetId(v string) {
	o.Id = v
}

// GetType returns the Type field value
func (o *IntegrationClientModel) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *IntegrationClientModel) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *IntegrationClientModel) SetType(v string) {
	o.Type = v
}

// GetTypeDisplayName returns the TypeDisplayName field value
func (o *IntegrationClientModel) GetTypeDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TypeDisplayName
}

// GetTypeDisplayNameOk returns a tuple with the TypeDisplayName field value
// and a boolean to check if the value has been set.
func (o *IntegrationClientModel) GetTypeDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TypeDisplayName, true
}

// SetTypeDisplayName sets field value
func (o *IntegrationClientModel) SetTypeDisplayName(v string) {
	o.TypeDisplayName = v
}

// GetName returns the Name field value
func (o *IntegrationClientModel) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *IntegrationClientModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *IntegrationClientModel) SetName(v string) {
	o.Name = v
}

// GetIcons returns the Icons field value
func (o *IntegrationClientModel) GetIcons() IconsConfigClientModel {
	if o == nil {
		var ret IconsConfigClientModel
		return ret
	}

	return o.Icons
}

// GetIconsOk returns a tuple with the Icons field value
// and a boolean to check if the value has been set.
func (o *IntegrationClientModel) GetIconsOk() (*IconsConfigClientModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Icons, true
}

// SetIcons sets field value
func (o *IntegrationClientModel) SetIcons(v IconsConfigClientModel) {
	o.Icons = v
}

func (o IntegrationClientModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IntegrationClientModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["type"] = o.Type
	toSerialize["type_display_name"] = o.TypeDisplayName
	toSerialize["name"] = o.Name
	toSerialize["icons"] = o.Icons
	return toSerialize, nil
}

func (o *IntegrationClientModel) UnmarshalJSON(bytes []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"type",
		"type_display_name",
		"name",
		"icons",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varIntegrationClientModel := _IntegrationClientModel{}

	err = json.Unmarshal(bytes, &varIntegrationClientModel)

	if err != nil {
		return err
	}

	*o = IntegrationClientModel(varIntegrationClientModel)

	return err
}

type NullableIntegrationClientModel struct {
	value *IntegrationClientModel
	isSet bool
}

func (v NullableIntegrationClientModel) Get() *IntegrationClientModel {
	return v.value
}

func (v *NullableIntegrationClientModel) Set(val *IntegrationClientModel) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegrationClientModel) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegrationClientModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegrationClientModel(val *IntegrationClientModel) *NullableIntegrationClientModel {
	return &NullableIntegrationClientModel{value: val, isSet: true}
}

func (v NullableIntegrationClientModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegrationClientModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

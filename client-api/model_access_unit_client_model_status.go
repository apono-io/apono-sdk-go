/*
Apono

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apono

import (
	"encoding/json"
	"fmt"
)

// checks if the AccessUnitClientModelStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccessUnitClientModelStatus{}

// AccessUnitClientModelStatus struct for AccessUnitClientModelStatus
type AccessUnitClientModelStatus struct {
	Status  AccessUnitStatusClient `json:"status"`
	Message NullableString         `json:"message,omitempty"`
}

type _AccessUnitClientModelStatus AccessUnitClientModelStatus

// NewAccessUnitClientModelStatus instantiates a new AccessUnitClientModelStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessUnitClientModelStatus(status AccessUnitStatusClient) *AccessUnitClientModelStatus {
	this := AccessUnitClientModelStatus{}
	this.Status = status
	return &this
}

// NewAccessUnitClientModelStatusWithDefaults instantiates a new AccessUnitClientModelStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessUnitClientModelStatusWithDefaults() *AccessUnitClientModelStatus {
	this := AccessUnitClientModelStatus{}
	return &this
}

// GetStatus returns the Status field value
func (o *AccessUnitClientModelStatus) GetStatus() AccessUnitStatusClient {
	if o == nil {
		var ret AccessUnitStatusClient
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *AccessUnitClientModelStatus) GetStatusOk() (*AccessUnitStatusClient, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *AccessUnitClientModelStatus) SetStatus(v AccessUnitStatusClient) {
	o.Status = v
}

// GetMessage returns the Message field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccessUnitClientModelStatus) GetMessage() string {
	if o == nil || IsNil(o.Message.Get()) {
		var ret string
		return ret
	}
	return *o.Message.Get()
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccessUnitClientModelStatus) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Message.Get(), o.Message.IsSet()
}

// HasMessage returns a boolean if a field has been set.
func (o *AccessUnitClientModelStatus) HasMessage() bool {
	if o != nil && o.Message.IsSet() {
		return true
	}

	return false
}

// SetMessage gets a reference to the given NullableString and assigns it to the Message field.
func (o *AccessUnitClientModelStatus) SetMessage(v string) {
	o.Message.Set(&v)
}

// SetMessageNil sets the value for Message to be an explicit nil
func (o *AccessUnitClientModelStatus) SetMessageNil() {
	o.Message.Set(nil)
}

// UnsetMessage ensures that no value is present for Message, not even an explicit nil
func (o *AccessUnitClientModelStatus) UnsetMessage() {
	o.Message.Unset()
}

func (o AccessUnitClientModelStatus) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccessUnitClientModelStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["status"] = o.Status
	if o.Message.IsSet() {
		toSerialize["message"] = o.Message.Get()
	}
	return toSerialize, nil
}

func (o *AccessUnitClientModelStatus) UnmarshalJSON(bytes []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccessUnitClientModelStatus := _AccessUnitClientModelStatus{}

	err = json.Unmarshal(bytes, &varAccessUnitClientModelStatus)

	if err != nil {
		return err
	}

	*o = AccessUnitClientModelStatus(varAccessUnitClientModelStatus)

	return err
}

type NullableAccessUnitClientModelStatus struct {
	value *AccessUnitClientModelStatus
	isSet bool
}

func (v NullableAccessUnitClientModelStatus) Get() *AccessUnitClientModelStatus {
	return v.value
}

func (v *NullableAccessUnitClientModelStatus) Set(val *AccessUnitClientModelStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessUnitClientModelStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessUnitClientModelStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessUnitClientModelStatus(val *AccessUnitClientModelStatus) *NullableAccessUnitClientModelStatus {
	return &NullableAccessUnitClientModelStatus{value: val, isSet: true}
}

func (v NullableAccessUnitClientModelStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessUnitClientModelStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

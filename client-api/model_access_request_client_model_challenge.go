/*
Apono

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apono

import (
	"encoding/json"
	"fmt"
)

// checks if the AccessRequestClientModelChallenge type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccessRequestClientModelChallenge{}

// AccessRequestClientModelChallenge struct for AccessRequestClientModelChallenge
type AccessRequestClientModelChallenge struct {
	LogicalRelation ClientChallengeLogicalRelation `json:"logical_relation"`
	Approvers       []ChallengeApproverClientModel `json:"approvers"`
}

type _AccessRequestClientModelChallenge AccessRequestClientModelChallenge

// NewAccessRequestClientModelChallenge instantiates a new AccessRequestClientModelChallenge object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessRequestClientModelChallenge(logicalRelation ClientChallengeLogicalRelation, approvers []ChallengeApproverClientModel) *AccessRequestClientModelChallenge {
	this := AccessRequestClientModelChallenge{}
	this.LogicalRelation = logicalRelation
	this.Approvers = approvers
	return &this
}

// NewAccessRequestClientModelChallengeWithDefaults instantiates a new AccessRequestClientModelChallenge object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessRequestClientModelChallengeWithDefaults() *AccessRequestClientModelChallenge {
	this := AccessRequestClientModelChallenge{}
	return &this
}

// GetLogicalRelation returns the LogicalRelation field value
func (o *AccessRequestClientModelChallenge) GetLogicalRelation() ClientChallengeLogicalRelation {
	if o == nil {
		var ret ClientChallengeLogicalRelation
		return ret
	}

	return o.LogicalRelation
}

// GetLogicalRelationOk returns a tuple with the LogicalRelation field value
// and a boolean to check if the value has been set.
func (o *AccessRequestClientModelChallenge) GetLogicalRelationOk() (*ClientChallengeLogicalRelation, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LogicalRelation, true
}

// SetLogicalRelation sets field value
func (o *AccessRequestClientModelChallenge) SetLogicalRelation(v ClientChallengeLogicalRelation) {
	o.LogicalRelation = v
}

// GetApprovers returns the Approvers field value
func (o *AccessRequestClientModelChallenge) GetApprovers() []ChallengeApproverClientModel {
	if o == nil {
		var ret []ChallengeApproverClientModel
		return ret
	}

	return o.Approvers
}

// GetApproversOk returns a tuple with the Approvers field value
// and a boolean to check if the value has been set.
func (o *AccessRequestClientModelChallenge) GetApproversOk() ([]ChallengeApproverClientModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Approvers, true
}

// SetApprovers sets field value
func (o *AccessRequestClientModelChallenge) SetApprovers(v []ChallengeApproverClientModel) {
	o.Approvers = v
}

func (o AccessRequestClientModelChallenge) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccessRequestClientModelChallenge) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["logical_relation"] = o.LogicalRelation
	toSerialize["approvers"] = o.Approvers
	return toSerialize, nil
}

func (o *AccessRequestClientModelChallenge) UnmarshalJSON(bytes []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"logical_relation",
		"approvers",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccessRequestClientModelChallenge := _AccessRequestClientModelChallenge{}

	err = json.Unmarshal(bytes, &varAccessRequestClientModelChallenge)

	if err != nil {
		return err
	}

	*o = AccessRequestClientModelChallenge(varAccessRequestClientModelChallenge)

	return err
}

type NullableAccessRequestClientModelChallenge struct {
	value *AccessRequestClientModelChallenge
	isSet bool
}

func (v NullableAccessRequestClientModelChallenge) Get() *AccessRequestClientModelChallenge {
	return v.value
}

func (v *NullableAccessRequestClientModelChallenge) Set(val *AccessRequestClientModelChallenge) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessRequestClientModelChallenge) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessRequestClientModelChallenge) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessRequestClientModelChallenge(val *AccessRequestClientModelChallenge) *NullableAccessRequestClientModelChallenge {
	return &NullableAccessRequestClientModelChallenge{value: val, isSet: true}
}

func (v NullableAccessRequestClientModelChallenge) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessRequestClientModelChallenge) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

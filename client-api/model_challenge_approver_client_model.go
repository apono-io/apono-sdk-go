/*
Apono

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apono

import (
	"encoding/json"
	"fmt"
)

// checks if the ChallengeApproverClientModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChallengeApproverClientModel{}

// ChallengeApproverClientModel struct for ChallengeApproverClientModel
type ChallengeApproverClientModel struct {
	Name     string                `json:"name"`
	Type     ClientChallengeType   `json:"type"`
	Status   ClientChallengeStatus `json:"status"`
	Metadata map[string]string     `json:"metadata"`
}

type _ChallengeApproverClientModel ChallengeApproverClientModel

// NewChallengeApproverClientModel instantiates a new ChallengeApproverClientModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChallengeApproverClientModel(name string, type_ ClientChallengeType, status ClientChallengeStatus, metadata map[string]string) *ChallengeApproverClientModel {
	this := ChallengeApproverClientModel{}
	this.Name = name
	this.Type = type_
	this.Status = status
	this.Metadata = metadata
	return &this
}

// NewChallengeApproverClientModelWithDefaults instantiates a new ChallengeApproverClientModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChallengeApproverClientModelWithDefaults() *ChallengeApproverClientModel {
	this := ChallengeApproverClientModel{}
	return &this
}

// GetName returns the Name field value
func (o *ChallengeApproverClientModel) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ChallengeApproverClientModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ChallengeApproverClientModel) SetName(v string) {
	o.Name = v
}

// GetType returns the Type field value
func (o *ChallengeApproverClientModel) GetType() ClientChallengeType {
	if o == nil {
		var ret ClientChallengeType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ChallengeApproverClientModel) GetTypeOk() (*ClientChallengeType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ChallengeApproverClientModel) SetType(v ClientChallengeType) {
	o.Type = v
}

// GetStatus returns the Status field value
func (o *ChallengeApproverClientModel) GetStatus() ClientChallengeStatus {
	if o == nil {
		var ret ClientChallengeStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ChallengeApproverClientModel) GetStatusOk() (*ClientChallengeStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ChallengeApproverClientModel) SetStatus(v ClientChallengeStatus) {
	o.Status = v
}

// GetMetadata returns the Metadata field value
func (o *ChallengeApproverClientModel) GetMetadata() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
func (o *ChallengeApproverClientModel) GetMetadataOk() (*map[string]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metadata, true
}

// SetMetadata sets field value
func (o *ChallengeApproverClientModel) SetMetadata(v map[string]string) {
	o.Metadata = v
}

func (o ChallengeApproverClientModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChallengeApproverClientModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["type"] = o.Type
	toSerialize["status"] = o.Status
	toSerialize["metadata"] = o.Metadata
	return toSerialize, nil
}

func (o *ChallengeApproverClientModel) UnmarshalJSON(bytes []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"type",
		"status",
		"metadata",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varChallengeApproverClientModel := _ChallengeApproverClientModel{}

	err = json.Unmarshal(bytes, &varChallengeApproverClientModel)

	if err != nil {
		return err
	}

	*o = ChallengeApproverClientModel(varChallengeApproverClientModel)

	return err
}

type NullableChallengeApproverClientModel struct {
	value *ChallengeApproverClientModel
	isSet bool
}

func (v NullableChallengeApproverClientModel) Get() *ChallengeApproverClientModel {
	return v.value
}

func (v *NullableChallengeApproverClientModel) Set(val *ChallengeApproverClientModel) {
	v.value = val
	v.isSet = true
}

func (v NullableChallengeApproverClientModel) IsSet() bool {
	return v.isSet
}

func (v *NullableChallengeApproverClientModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChallengeApproverClientModel(val *ChallengeApproverClientModel) *NullableChallengeApproverClientModel {
	return &NullableChallengeApproverClientModel{value: val, isSet: true}
}

func (v NullableChallengeApproverClientModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChallengeApproverClientModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
Apono

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apono

import (
	"encoding/json"
	"fmt"
)

// checks if the PermissionClientModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PermissionClientModel{}

// PermissionClientModel struct for PermissionClientModel
type PermissionClientModel struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

type _PermissionClientModel PermissionClientModel

// NewPermissionClientModel instantiates a new PermissionClientModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPermissionClientModel(id string, name string) *PermissionClientModel {
	this := PermissionClientModel{}
	this.Id = id
	this.Name = name
	return &this
}

// NewPermissionClientModelWithDefaults instantiates a new PermissionClientModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPermissionClientModelWithDefaults() *PermissionClientModel {
	this := PermissionClientModel{}
	return &this
}

// GetId returns the Id field value
func (o *PermissionClientModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PermissionClientModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PermissionClientModel) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *PermissionClientModel) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PermissionClientModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PermissionClientModel) SetName(v string) {
	o.Name = v
}

func (o PermissionClientModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PermissionClientModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

func (o *PermissionClientModel) UnmarshalJSON(bytes []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPermissionClientModel := _PermissionClientModel{}

	err = json.Unmarshal(bytes, &varPermissionClientModel)

	if err != nil {
		return err
	}

	*o = PermissionClientModel(varPermissionClientModel)

	return err
}

type NullablePermissionClientModel struct {
	value *PermissionClientModel
	isSet bool
}

func (v NullablePermissionClientModel) Get() *PermissionClientModel {
	return v.value
}

func (v *NullablePermissionClientModel) Set(val *PermissionClientModel) {
	v.value = val
	v.isSet = true
}

func (v NullablePermissionClientModel) IsSet() bool {
	return v.isSet
}

func (v *NullablePermissionClientModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePermissionClientModel(val *PermissionClientModel) *NullablePermissionClientModel {
	return &NullablePermissionClientModel{value: val, isSet: true}
}

func (v NullablePermissionClientModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePermissionClientModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

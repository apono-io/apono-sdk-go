/*
Apono

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apono

import (
	"encoding/json"
)

// checks if the ResourceUserTagsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceUserTagsResponse{}

// ResourceUserTagsResponse struct for ResourceUserTagsResponse
type ResourceUserTagsResponse struct {
	ResourceId string            `json:"resource_id"`
	Tags       map[string]string `json:"tags"`
}

// NewResourceUserTagsResponse instantiates a new ResourceUserTagsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceUserTagsResponse(resourceId string, tags map[string]string) *ResourceUserTagsResponse {
	this := ResourceUserTagsResponse{}
	this.ResourceId = resourceId
	this.Tags = tags
	return &this
}

// NewResourceUserTagsResponseWithDefaults instantiates a new ResourceUserTagsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceUserTagsResponseWithDefaults() *ResourceUserTagsResponse {
	this := ResourceUserTagsResponse{}
	return &this
}

// GetResourceId returns the ResourceId field value
func (o *ResourceUserTagsResponse) GetResourceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value
// and a boolean to check if the value has been set.
func (o *ResourceUserTagsResponse) GetResourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceId, true
}

// SetResourceId sets field value
func (o *ResourceUserTagsResponse) SetResourceId(v string) {
	o.ResourceId = v
}

// GetTags returns the Tags field value
func (o *ResourceUserTagsResponse) GetTags() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *ResourceUserTagsResponse) GetTagsOk() (*map[string]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tags, true
}

// SetTags sets field value
func (o *ResourceUserTagsResponse) SetTags(v map[string]string) {
	o.Tags = v
}

func (o ResourceUserTagsResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceUserTagsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["resource_id"] = o.ResourceId
	toSerialize["tags"] = o.Tags
	return toSerialize, nil
}

type NullableResourceUserTagsResponse struct {
	value *ResourceUserTagsResponse
	isSet bool
}

func (v NullableResourceUserTagsResponse) Get() *ResourceUserTagsResponse {
	return v.value
}

func (v *NullableResourceUserTagsResponse) Set(val *ResourceUserTagsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceUserTagsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceUserTagsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceUserTagsResponse(val *ResourceUserTagsResponse) *NullableResourceUserTagsResponse {
	return &NullableResourceUserTagsResponse{value: val, isSet: true}
}

func (v NullableResourceUserTagsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceUserTagsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

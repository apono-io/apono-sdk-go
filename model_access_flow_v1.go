/*
Apono

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apono

import (
	"encoding/json"
)

// checks if the AccessFlowV1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccessFlowV1{}

// AccessFlowV1 struct for AccessFlowV1
type AccessFlowV1 struct {
	Id                 string                       `json:"id"`
	Name               string                       `json:"name"`
	Active             bool                         `json:"active"`
	Trigger            AccessFlowTriggerV1          `json:"trigger"`
	Grantees           []GranteeV1                  `json:"grantees"`
	IntegrationTargets []AccessTargetIntegrationV1  `json:"integration_targets"`
	BundleTargets      []AccessTargetBundleV1       `json:"bundle_targets"`
	Approvers          []ApproverV1                 `json:"approvers,omitempty"`
	RevokeAfterInSec   int32                        `json:"revoke_after_in_sec"`
	Settings           NullableAccessFlowV1Settings `json:"settings,omitempty"`
	CreatedDate        Instant                      `json:"created_date"`
}

// NewAccessFlowV1 instantiates a new AccessFlowV1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessFlowV1(id string, name string, active bool, trigger AccessFlowTriggerV1, grantees []GranteeV1, integrationTargets []AccessTargetIntegrationV1, bundleTargets []AccessTargetBundleV1, revokeAfterInSec int32, createdDate Instant) *AccessFlowV1 {
	this := AccessFlowV1{}
	this.Id = id
	this.Name = name
	this.Active = active
	this.Trigger = trigger
	this.Grantees = grantees
	this.IntegrationTargets = integrationTargets
	this.BundleTargets = bundleTargets
	this.RevokeAfterInSec = revokeAfterInSec
	this.CreatedDate = createdDate
	return &this
}

// NewAccessFlowV1WithDefaults instantiates a new AccessFlowV1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessFlowV1WithDefaults() *AccessFlowV1 {
	this := AccessFlowV1{}
	return &this
}

// GetId returns the Id field value
func (o *AccessFlowV1) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AccessFlowV1) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AccessFlowV1) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *AccessFlowV1) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AccessFlowV1) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AccessFlowV1) SetName(v string) {
	o.Name = v
}

// GetActive returns the Active field value
func (o *AccessFlowV1) GetActive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Active
}

// GetActiveOk returns a tuple with the Active field value
// and a boolean to check if the value has been set.
func (o *AccessFlowV1) GetActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Active, true
}

// SetActive sets field value
func (o *AccessFlowV1) SetActive(v bool) {
	o.Active = v
}

// GetTrigger returns the Trigger field value
func (o *AccessFlowV1) GetTrigger() AccessFlowTriggerV1 {
	if o == nil {
		var ret AccessFlowTriggerV1
		return ret
	}

	return o.Trigger
}

// GetTriggerOk returns a tuple with the Trigger field value
// and a boolean to check if the value has been set.
func (o *AccessFlowV1) GetTriggerOk() (*AccessFlowTriggerV1, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Trigger, true
}

// SetTrigger sets field value
func (o *AccessFlowV1) SetTrigger(v AccessFlowTriggerV1) {
	o.Trigger = v
}

// GetGrantees returns the Grantees field value
func (o *AccessFlowV1) GetGrantees() []GranteeV1 {
	if o == nil {
		var ret []GranteeV1
		return ret
	}

	return o.Grantees
}

// GetGranteesOk returns a tuple with the Grantees field value
// and a boolean to check if the value has been set.
func (o *AccessFlowV1) GetGranteesOk() ([]GranteeV1, bool) {
	if o == nil {
		return nil, false
	}
	return o.Grantees, true
}

// SetGrantees sets field value
func (o *AccessFlowV1) SetGrantees(v []GranteeV1) {
	o.Grantees = v
}

// GetIntegrationTargets returns the IntegrationTargets field value
func (o *AccessFlowV1) GetIntegrationTargets() []AccessTargetIntegrationV1 {
	if o == nil {
		var ret []AccessTargetIntegrationV1
		return ret
	}

	return o.IntegrationTargets
}

// GetIntegrationTargetsOk returns a tuple with the IntegrationTargets field value
// and a boolean to check if the value has been set.
func (o *AccessFlowV1) GetIntegrationTargetsOk() ([]AccessTargetIntegrationV1, bool) {
	if o == nil {
		return nil, false
	}
	return o.IntegrationTargets, true
}

// SetIntegrationTargets sets field value
func (o *AccessFlowV1) SetIntegrationTargets(v []AccessTargetIntegrationV1) {
	o.IntegrationTargets = v
}

// GetBundleTargets returns the BundleTargets field value
func (o *AccessFlowV1) GetBundleTargets() []AccessTargetBundleV1 {
	if o == nil {
		var ret []AccessTargetBundleV1
		return ret
	}

	return o.BundleTargets
}

// GetBundleTargetsOk returns a tuple with the BundleTargets field value
// and a boolean to check if the value has been set.
func (o *AccessFlowV1) GetBundleTargetsOk() ([]AccessTargetBundleV1, bool) {
	if o == nil {
		return nil, false
	}
	return o.BundleTargets, true
}

// SetBundleTargets sets field value
func (o *AccessFlowV1) SetBundleTargets(v []AccessTargetBundleV1) {
	o.BundleTargets = v
}

// GetApprovers returns the Approvers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccessFlowV1) GetApprovers() []ApproverV1 {
	if o == nil {
		var ret []ApproverV1
		return ret
	}
	return o.Approvers
}

// GetApproversOk returns a tuple with the Approvers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccessFlowV1) GetApproversOk() ([]ApproverV1, bool) {
	if o == nil || IsNil(o.Approvers) {
		return nil, false
	}
	return o.Approvers, true
}

// HasApprovers returns a boolean if a field has been set.
func (o *AccessFlowV1) HasApprovers() bool {
	if o != nil && IsNil(o.Approvers) {
		return true
	}

	return false
}

// SetApprovers gets a reference to the given []ApproverV1 and assigns it to the Approvers field.
func (o *AccessFlowV1) SetApprovers(v []ApproverV1) {
	o.Approvers = v
}

// GetRevokeAfterInSec returns the RevokeAfterInSec field value
func (o *AccessFlowV1) GetRevokeAfterInSec() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RevokeAfterInSec
}

// GetRevokeAfterInSecOk returns a tuple with the RevokeAfterInSec field value
// and a boolean to check if the value has been set.
func (o *AccessFlowV1) GetRevokeAfterInSecOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RevokeAfterInSec, true
}

// SetRevokeAfterInSec sets field value
func (o *AccessFlowV1) SetRevokeAfterInSec(v int32) {
	o.RevokeAfterInSec = v
}

// GetSettings returns the Settings field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccessFlowV1) GetSettings() AccessFlowV1Settings {
	if o == nil || IsNil(o.Settings.Get()) {
		var ret AccessFlowV1Settings
		return ret
	}
	return *o.Settings.Get()
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccessFlowV1) GetSettingsOk() (*AccessFlowV1Settings, bool) {
	if o == nil {
		return nil, false
	}
	return o.Settings.Get(), o.Settings.IsSet()
}

// HasSettings returns a boolean if a field has been set.
func (o *AccessFlowV1) HasSettings() bool {
	if o != nil && o.Settings.IsSet() {
		return true
	}

	return false
}

// SetSettings gets a reference to the given NullableAccessFlowV1Settings and assigns it to the Settings field.
func (o *AccessFlowV1) SetSettings(v AccessFlowV1Settings) {
	o.Settings.Set(&v)
}

// SetSettingsNil sets the value for Settings to be an explicit nil
func (o *AccessFlowV1) SetSettingsNil() {
	o.Settings.Set(nil)
}

// UnsetSettings ensures that no value is present for Settings, not even an explicit nil
func (o *AccessFlowV1) UnsetSettings() {
	o.Settings.Unset()
}

// GetCreatedDate returns the CreatedDate field value
func (o *AccessFlowV1) GetCreatedDate() Instant {
	if o == nil {
		var ret Instant
		return ret
	}

	return o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value
// and a boolean to check if the value has been set.
func (o *AccessFlowV1) GetCreatedDateOk() (*Instant, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedDate, true
}

// SetCreatedDate sets field value
func (o *AccessFlowV1) SetCreatedDate(v Instant) {
	o.CreatedDate = v
}

func (o AccessFlowV1) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccessFlowV1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["active"] = o.Active
	toSerialize["trigger"] = o.Trigger
	toSerialize["grantees"] = o.Grantees
	toSerialize["integration_targets"] = o.IntegrationTargets
	toSerialize["bundle_targets"] = o.BundleTargets
	if o.Approvers != nil {
		toSerialize["approvers"] = o.Approvers
	}
	toSerialize["revoke_after_in_sec"] = o.RevokeAfterInSec
	if o.Settings.IsSet() {
		toSerialize["settings"] = o.Settings.Get()
	}
	toSerialize["created_date"] = o.CreatedDate
	return toSerialize, nil
}

type NullableAccessFlowV1 struct {
	value *AccessFlowV1
	isSet bool
}

func (v NullableAccessFlowV1) Get() *AccessFlowV1 {
	return v.value
}

func (v *NullableAccessFlowV1) Set(val *AccessFlowV1) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessFlowV1) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessFlowV1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessFlowV1(val *AccessFlowV1) *NullableAccessFlowV1 {
	return &NullableAccessFlowV1{value: val, isSet: true}
}

func (v NullableAccessFlowV1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessFlowV1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

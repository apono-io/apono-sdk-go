/*
Apono

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apono

import (
	"encoding/json"
	"fmt"
)

// GranteeTypeModel the model 'GranteeTypeModel'
type GranteeTypeModel string

// List of GranteeTypeModel
const (
	GRANTEETYPEMODEL_USER              GranteeTypeModel = "USER"
	GRANTEETYPEMODEL_GROUP             GranteeTypeModel = "GROUP"
	GRANTEETYPEMODEL_EXTERNAL_EMAIL    GranteeTypeModel = "EXTERNAL_EMAIL"
	GRANTEETYPEMODEL_CONTEXT_ATTRIBUTE GranteeTypeModel = "CONTEXT_ATTRIBUTE"
)

// All allowed values of GranteeTypeModel enum
var AllowedGranteeTypeModelEnumValues = []GranteeTypeModel{
	"USER",
	"GROUP",
	"EXTERNAL_EMAIL",
	"CONTEXT_ATTRIBUTE",
}

func (v *GranteeTypeModel) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := GranteeTypeModel(value)
	for _, existing := range AllowedGranteeTypeModelEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid GranteeTypeModel", value)
}

// NewGranteeTypeModelFromValue returns a pointer to a valid GranteeTypeModel
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewGranteeTypeModelFromValue(v string) (*GranteeTypeModel, error) {
	ev := GranteeTypeModel(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for GranteeTypeModel: valid values are %v", v, AllowedGranteeTypeModelEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v GranteeTypeModel) IsValid() bool {
	for _, existing := range AllowedGranteeTypeModelEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to GranteeTypeModel value
func (v GranteeTypeModel) Ptr() *GranteeTypeModel {
	return &v
}

type NullableGranteeTypeModel struct {
	value *GranteeTypeModel
	isSet bool
}

func (v NullableGranteeTypeModel) Get() *GranteeTypeModel {
	return v.value
}

func (v *NullableGranteeTypeModel) Set(val *GranteeTypeModel) {
	v.value = val
	v.isSet = true
}

func (v NullableGranteeTypeModel) IsSet() bool {
	return v.isSet
}

func (v *NullableGranteeTypeModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGranteeTypeModel(val *GranteeTypeModel) *NullableGranteeTypeModel {
	return &NullableGranteeTypeModel{value: val, isSet: true}
}

func (v NullableGranteeTypeModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGranteeTypeModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
Apono

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apono

import (
	"encoding/json"
)

// checks if the SelectableResource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SelectableResource{}

// SelectableResource struct for SelectableResource
type SelectableResource struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// NewSelectableResource instantiates a new SelectableResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSelectableResource(id string, name string) *SelectableResource {
	this := SelectableResource{}
	this.Id = id
	this.Name = name
	return &this
}

// NewSelectableResourceWithDefaults instantiates a new SelectableResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSelectableResourceWithDefaults() *SelectableResource {
	this := SelectableResource{}
	return &this
}

// GetId returns the Id field value
func (o *SelectableResource) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SelectableResource) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SelectableResource) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *SelectableResource) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SelectableResource) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SelectableResource) SetName(v string) {
	o.Name = v
}

func (o SelectableResource) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SelectableResource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

type NullableSelectableResource struct {
	value *SelectableResource
	isSet bool
}

func (v NullableSelectableResource) Get() *SelectableResource {
	return v.value
}

func (v *NullableSelectableResource) Set(val *SelectableResource) {
	v.value = val
	v.isSet = true
}

func (v NullableSelectableResource) IsSet() bool {
	return v.isSet
}

func (v *NullableSelectableResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSelectableResource(val *SelectableResource) *NullableSelectableResource {
	return &NullableSelectableResource{value: val, isSet: true}
}

func (v NullableSelectableResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSelectableResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

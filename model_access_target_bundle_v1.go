/*
Apono

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apono

import (
	"encoding/json"
)

// checks if the AccessTargetBundleV1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccessTargetBundleV1{}

// AccessTargetBundleV1 struct for AccessTargetBundleV1
type AccessTargetBundleV1 struct {
	BundleId string `json:"bundle_id"`
}

// NewAccessTargetBundleV1 instantiates a new AccessTargetBundleV1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessTargetBundleV1(bundleId string) *AccessTargetBundleV1 {
	this := AccessTargetBundleV1{}
	this.BundleId = bundleId
	return &this
}

// NewAccessTargetBundleV1WithDefaults instantiates a new AccessTargetBundleV1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessTargetBundleV1WithDefaults() *AccessTargetBundleV1 {
	this := AccessTargetBundleV1{}
	return &this
}

// GetBundleId returns the BundleId field value
func (o *AccessTargetBundleV1) GetBundleId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BundleId
}

// GetBundleIdOk returns a tuple with the BundleId field value
// and a boolean to check if the value has been set.
func (o *AccessTargetBundleV1) GetBundleIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BundleId, true
}

// SetBundleId sets field value
func (o *AccessTargetBundleV1) SetBundleId(v string) {
	o.BundleId = v
}

func (o AccessTargetBundleV1) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccessTargetBundleV1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["bundle_id"] = o.BundleId
	return toSerialize, nil
}

type NullableAccessTargetBundleV1 struct {
	value *AccessTargetBundleV1
	isSet bool
}

func (v NullableAccessTargetBundleV1) Get() *AccessTargetBundleV1 {
	return v.value
}

func (v *NullableAccessTargetBundleV1) Set(val *AccessTargetBundleV1) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessTargetBundleV1) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessTargetBundleV1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessTargetBundleV1(val *AccessTargetBundleV1) *NullableAccessTargetBundleV1 {
	return &NullableAccessTargetBundleV1{value: val, isSet: true}
}

func (v NullableAccessTargetBundleV1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessTargetBundleV1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
Apono

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apono

import (
	"encoding/json"
)

// checks if the AccessTargetIntegrationV1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccessTargetIntegrationV1{}

// AccessTargetIntegrationV1 struct for AccessTargetIntegrationV1
type AccessTargetIntegrationV1 struct {
	IntegrationId       string   `json:"integration_id"`
	ResourceType        string   `json:"resource_type"`
	ResourceTagIncludes []TagV1  `json:"resource_tag_includes"`
	ResourceTagExcludes []TagV1  `json:"resource_tag_excludes"`
	Permissions         []string `json:"permissions"`
}

// NewAccessTargetIntegrationV1 instantiates a new AccessTargetIntegrationV1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessTargetIntegrationV1(integrationId string, resourceType string, resourceTagIncludes []TagV1, resourceTagExcludes []TagV1, permissions []string) *AccessTargetIntegrationV1 {
	this := AccessTargetIntegrationV1{}
	this.IntegrationId = integrationId
	this.ResourceType = resourceType
	this.ResourceTagIncludes = resourceTagIncludes
	this.ResourceTagExcludes = resourceTagExcludes
	this.Permissions = permissions
	return &this
}

// NewAccessTargetIntegrationV1WithDefaults instantiates a new AccessTargetIntegrationV1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessTargetIntegrationV1WithDefaults() *AccessTargetIntegrationV1 {
	this := AccessTargetIntegrationV1{}
	return &this
}

// GetIntegrationId returns the IntegrationId field value
func (o *AccessTargetIntegrationV1) GetIntegrationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IntegrationId
}

// GetIntegrationIdOk returns a tuple with the IntegrationId field value
// and a boolean to check if the value has been set.
func (o *AccessTargetIntegrationV1) GetIntegrationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IntegrationId, true
}

// SetIntegrationId sets field value
func (o *AccessTargetIntegrationV1) SetIntegrationId(v string) {
	o.IntegrationId = v
}

// GetResourceType returns the ResourceType field value
func (o *AccessTargetIntegrationV1) GetResourceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value
// and a boolean to check if the value has been set.
func (o *AccessTargetIntegrationV1) GetResourceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceType, true
}

// SetResourceType sets field value
func (o *AccessTargetIntegrationV1) SetResourceType(v string) {
	o.ResourceType = v
}

// GetResourceTagIncludes returns the ResourceTagIncludes field value
func (o *AccessTargetIntegrationV1) GetResourceTagIncludes() []TagV1 {
	if o == nil {
		var ret []TagV1
		return ret
	}

	return o.ResourceTagIncludes
}

// GetResourceTagIncludesOk returns a tuple with the ResourceTagIncludes field value
// and a boolean to check if the value has been set.
func (o *AccessTargetIntegrationV1) GetResourceTagIncludesOk() ([]TagV1, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResourceTagIncludes, true
}

// SetResourceTagIncludes sets field value
func (o *AccessTargetIntegrationV1) SetResourceTagIncludes(v []TagV1) {
	o.ResourceTagIncludes = v
}

// GetResourceTagExcludes returns the ResourceTagExcludes field value
func (o *AccessTargetIntegrationV1) GetResourceTagExcludes() []TagV1 {
	if o == nil {
		var ret []TagV1
		return ret
	}

	return o.ResourceTagExcludes
}

// GetResourceTagExcludesOk returns a tuple with the ResourceTagExcludes field value
// and a boolean to check if the value has been set.
func (o *AccessTargetIntegrationV1) GetResourceTagExcludesOk() ([]TagV1, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResourceTagExcludes, true
}

// SetResourceTagExcludes sets field value
func (o *AccessTargetIntegrationV1) SetResourceTagExcludes(v []TagV1) {
	o.ResourceTagExcludes = v
}

// GetPermissions returns the Permissions field value
func (o *AccessTargetIntegrationV1) GetPermissions() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value
// and a boolean to check if the value has been set.
func (o *AccessTargetIntegrationV1) GetPermissionsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Permissions, true
}

// SetPermissions sets field value
func (o *AccessTargetIntegrationV1) SetPermissions(v []string) {
	o.Permissions = v
}

func (o AccessTargetIntegrationV1) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccessTargetIntegrationV1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["integration_id"] = o.IntegrationId
	toSerialize["resource_type"] = o.ResourceType
	toSerialize["resource_tag_includes"] = o.ResourceTagIncludes
	toSerialize["resource_tag_excludes"] = o.ResourceTagExcludes
	toSerialize["permissions"] = o.Permissions
	return toSerialize, nil
}

type NullableAccessTargetIntegrationV1 struct {
	value *AccessTargetIntegrationV1
	isSet bool
}

func (v NullableAccessTargetIntegrationV1) Get() *AccessTargetIntegrationV1 {
	return v.value
}

func (v *NullableAccessTargetIntegrationV1) Set(val *AccessTargetIntegrationV1) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessTargetIntegrationV1) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessTargetIntegrationV1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessTargetIntegrationV1(val *AccessTargetIntegrationV1) *NullableAccessTargetIntegrationV1 {
	return &NullableAccessTargetIntegrationV1{value: val, isSet: true}
}

func (v NullableAccessTargetIntegrationV1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessTargetIntegrationV1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
Apono

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apono

import (
	"encoding/json"
)

// checks if the UpdateAccessFlowV1Trigger type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateAccessFlowV1Trigger{}

// UpdateAccessFlowV1Trigger struct for UpdateAccessFlowV1Trigger
type UpdateAccessFlowV1Trigger struct {
	Type      string                               `json:"type"`
	Timeframe NullableAccessFlowTriggerV1Timeframe `json:"timeframe,omitempty"`
}

// NewUpdateAccessFlowV1Trigger instantiates a new UpdateAccessFlowV1Trigger object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateAccessFlowV1Trigger(type_ string) *UpdateAccessFlowV1Trigger {
	this := UpdateAccessFlowV1Trigger{}
	this.Type = type_
	return &this
}

// NewUpdateAccessFlowV1TriggerWithDefaults instantiates a new UpdateAccessFlowV1Trigger object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateAccessFlowV1TriggerWithDefaults() *UpdateAccessFlowV1Trigger {
	this := UpdateAccessFlowV1Trigger{}
	return &this
}

// GetType returns the Type field value
func (o *UpdateAccessFlowV1Trigger) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *UpdateAccessFlowV1Trigger) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *UpdateAccessFlowV1Trigger) SetType(v string) {
	o.Type = v
}

// GetTimeframe returns the Timeframe field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateAccessFlowV1Trigger) GetTimeframe() AccessFlowTriggerV1Timeframe {
	if o == nil || IsNil(o.Timeframe.Get()) {
		var ret AccessFlowTriggerV1Timeframe
		return ret
	}
	return *o.Timeframe.Get()
}

// GetTimeframeOk returns a tuple with the Timeframe field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateAccessFlowV1Trigger) GetTimeframeOk() (*AccessFlowTriggerV1Timeframe, bool) {
	if o == nil {
		return nil, false
	}
	return o.Timeframe.Get(), o.Timeframe.IsSet()
}

// HasTimeframe returns a boolean if a field has been set.
func (o *UpdateAccessFlowV1Trigger) HasTimeframe() bool {
	if o != nil && o.Timeframe.IsSet() {
		return true
	}

	return false
}

// SetTimeframe gets a reference to the given NullableAccessFlowTriggerV1Timeframe and assigns it to the Timeframe field.
func (o *UpdateAccessFlowV1Trigger) SetTimeframe(v AccessFlowTriggerV1Timeframe) {
	o.Timeframe.Set(&v)
}

// SetTimeframeNil sets the value for Timeframe to be an explicit nil
func (o *UpdateAccessFlowV1Trigger) SetTimeframeNil() {
	o.Timeframe.Set(nil)
}

// UnsetTimeframe ensures that no value is present for Timeframe, not even an explicit nil
func (o *UpdateAccessFlowV1Trigger) UnsetTimeframe() {
	o.Timeframe.Unset()
}

func (o UpdateAccessFlowV1Trigger) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateAccessFlowV1Trigger) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	if o.Timeframe.IsSet() {
		toSerialize["timeframe"] = o.Timeframe.Get()
	}
	return toSerialize, nil
}

type NullableUpdateAccessFlowV1Trigger struct {
	value *UpdateAccessFlowV1Trigger
	isSet bool
}

func (v NullableUpdateAccessFlowV1Trigger) Get() *UpdateAccessFlowV1Trigger {
	return v.value
}

func (v *NullableUpdateAccessFlowV1Trigger) Set(val *UpdateAccessFlowV1Trigger) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateAccessFlowV1Trigger) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateAccessFlowV1Trigger) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateAccessFlowV1Trigger(val *UpdateAccessFlowV1Trigger) *NullableUpdateAccessFlowV1Trigger {
	return &NullableUpdateAccessFlowV1Trigger{value: val, isSet: true}
}

func (v NullableUpdateAccessFlowV1Trigger) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateAccessFlowV1Trigger) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
Apono

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apono

import (
	"encoding/json"
)

// checks if the ActivityReportJsonExportModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActivityReportJsonExportModel{}

// ActivityReportJsonExportModel struct for ActivityReportJsonExportModel
type ActivityReportJsonExportModel struct {
	RequestId      NullableString `json:"request_id,omitempty"`
	RequestDate    NullableString `json:"request_date,omitempty"`
	RequestorName  NullableString `json:"requestor_name,omitempty"`
	RequestorEmail NullableString `json:"requestor_email,omitempty"`
	Integration    NullableString `json:"integration,omitempty"`
	ResourceType   NullableString `json:"resource_type,omitempty"`
	Resources      []string       `json:"resources,omitempty"`
	Permissions    []string       `json:"permissions,omitempty"`
	Justification  NullableString `json:"justification,omitempty"`
	Status         NullableString `json:"status,omitempty"`
	TriggerType    NullableString `json:"trigger_type,omitempty"`
	AccessFlow     NullableString `json:"access_flow,omitempty"`
}

// NewActivityReportJsonExportModel instantiates a new ActivityReportJsonExportModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActivityReportJsonExportModel() *ActivityReportJsonExportModel {
	this := ActivityReportJsonExportModel{}
	return &this
}

// NewActivityReportJsonExportModelWithDefaults instantiates a new ActivityReportJsonExportModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActivityReportJsonExportModelWithDefaults() *ActivityReportJsonExportModel {
	this := ActivityReportJsonExportModel{}
	return &this
}

// GetRequestId returns the RequestId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActivityReportJsonExportModel) GetRequestId() string {
	if o == nil || IsNil(o.RequestId.Get()) {
		var ret string
		return ret
	}
	return *o.RequestId.Get()
}

// GetRequestIdOk returns a tuple with the RequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActivityReportJsonExportModel) GetRequestIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequestId.Get(), o.RequestId.IsSet()
}

// HasRequestId returns a boolean if a field has been set.
func (o *ActivityReportJsonExportModel) HasRequestId() bool {
	if o != nil && o.RequestId.IsSet() {
		return true
	}

	return false
}

// SetRequestId gets a reference to the given NullableString and assigns it to the RequestId field.
func (o *ActivityReportJsonExportModel) SetRequestId(v string) {
	o.RequestId.Set(&v)
}

// SetRequestIdNil sets the value for RequestId to be an explicit nil
func (o *ActivityReportJsonExportModel) SetRequestIdNil() {
	o.RequestId.Set(nil)
}

// UnsetRequestId ensures that no value is present for RequestId, not even an explicit nil
func (o *ActivityReportJsonExportModel) UnsetRequestId() {
	o.RequestId.Unset()
}

// GetRequestDate returns the RequestDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActivityReportJsonExportModel) GetRequestDate() string {
	if o == nil || IsNil(o.RequestDate.Get()) {
		var ret string
		return ret
	}
	return *o.RequestDate.Get()
}

// GetRequestDateOk returns a tuple with the RequestDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActivityReportJsonExportModel) GetRequestDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequestDate.Get(), o.RequestDate.IsSet()
}

// HasRequestDate returns a boolean if a field has been set.
func (o *ActivityReportJsonExportModel) HasRequestDate() bool {
	if o != nil && o.RequestDate.IsSet() {
		return true
	}

	return false
}

// SetRequestDate gets a reference to the given NullableString and assigns it to the RequestDate field.
func (o *ActivityReportJsonExportModel) SetRequestDate(v string) {
	o.RequestDate.Set(&v)
}

// SetRequestDateNil sets the value for RequestDate to be an explicit nil
func (o *ActivityReportJsonExportModel) SetRequestDateNil() {
	o.RequestDate.Set(nil)
}

// UnsetRequestDate ensures that no value is present for RequestDate, not even an explicit nil
func (o *ActivityReportJsonExportModel) UnsetRequestDate() {
	o.RequestDate.Unset()
}

// GetRequestorName returns the RequestorName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActivityReportJsonExportModel) GetRequestorName() string {
	if o == nil || IsNil(o.RequestorName.Get()) {
		var ret string
		return ret
	}
	return *o.RequestorName.Get()
}

// GetRequestorNameOk returns a tuple with the RequestorName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActivityReportJsonExportModel) GetRequestorNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequestorName.Get(), o.RequestorName.IsSet()
}

// HasRequestorName returns a boolean if a field has been set.
func (o *ActivityReportJsonExportModel) HasRequestorName() bool {
	if o != nil && o.RequestorName.IsSet() {
		return true
	}

	return false
}

// SetRequestorName gets a reference to the given NullableString and assigns it to the RequestorName field.
func (o *ActivityReportJsonExportModel) SetRequestorName(v string) {
	o.RequestorName.Set(&v)
}

// SetRequestorNameNil sets the value for RequestorName to be an explicit nil
func (o *ActivityReportJsonExportModel) SetRequestorNameNil() {
	o.RequestorName.Set(nil)
}

// UnsetRequestorName ensures that no value is present for RequestorName, not even an explicit nil
func (o *ActivityReportJsonExportModel) UnsetRequestorName() {
	o.RequestorName.Unset()
}

// GetRequestorEmail returns the RequestorEmail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActivityReportJsonExportModel) GetRequestorEmail() string {
	if o == nil || IsNil(o.RequestorEmail.Get()) {
		var ret string
		return ret
	}
	return *o.RequestorEmail.Get()
}

// GetRequestorEmailOk returns a tuple with the RequestorEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActivityReportJsonExportModel) GetRequestorEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequestorEmail.Get(), o.RequestorEmail.IsSet()
}

// HasRequestorEmail returns a boolean if a field has been set.
func (o *ActivityReportJsonExportModel) HasRequestorEmail() bool {
	if o != nil && o.RequestorEmail.IsSet() {
		return true
	}

	return false
}

// SetRequestorEmail gets a reference to the given NullableString and assigns it to the RequestorEmail field.
func (o *ActivityReportJsonExportModel) SetRequestorEmail(v string) {
	o.RequestorEmail.Set(&v)
}

// SetRequestorEmailNil sets the value for RequestorEmail to be an explicit nil
func (o *ActivityReportJsonExportModel) SetRequestorEmailNil() {
	o.RequestorEmail.Set(nil)
}

// UnsetRequestorEmail ensures that no value is present for RequestorEmail, not even an explicit nil
func (o *ActivityReportJsonExportModel) UnsetRequestorEmail() {
	o.RequestorEmail.Unset()
}

// GetIntegration returns the Integration field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActivityReportJsonExportModel) GetIntegration() string {
	if o == nil || IsNil(o.Integration.Get()) {
		var ret string
		return ret
	}
	return *o.Integration.Get()
}

// GetIntegrationOk returns a tuple with the Integration field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActivityReportJsonExportModel) GetIntegrationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Integration.Get(), o.Integration.IsSet()
}

// HasIntegration returns a boolean if a field has been set.
func (o *ActivityReportJsonExportModel) HasIntegration() bool {
	if o != nil && o.Integration.IsSet() {
		return true
	}

	return false
}

// SetIntegration gets a reference to the given NullableString and assigns it to the Integration field.
func (o *ActivityReportJsonExportModel) SetIntegration(v string) {
	o.Integration.Set(&v)
}

// SetIntegrationNil sets the value for Integration to be an explicit nil
func (o *ActivityReportJsonExportModel) SetIntegrationNil() {
	o.Integration.Set(nil)
}

// UnsetIntegration ensures that no value is present for Integration, not even an explicit nil
func (o *ActivityReportJsonExportModel) UnsetIntegration() {
	o.Integration.Unset()
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActivityReportJsonExportModel) GetResourceType() string {
	if o == nil || IsNil(o.ResourceType.Get()) {
		var ret string
		return ret
	}
	return *o.ResourceType.Get()
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActivityReportJsonExportModel) GetResourceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResourceType.Get(), o.ResourceType.IsSet()
}

// HasResourceType returns a boolean if a field has been set.
func (o *ActivityReportJsonExportModel) HasResourceType() bool {
	if o != nil && o.ResourceType.IsSet() {
		return true
	}

	return false
}

// SetResourceType gets a reference to the given NullableString and assigns it to the ResourceType field.
func (o *ActivityReportJsonExportModel) SetResourceType(v string) {
	o.ResourceType.Set(&v)
}

// SetResourceTypeNil sets the value for ResourceType to be an explicit nil
func (o *ActivityReportJsonExportModel) SetResourceTypeNil() {
	o.ResourceType.Set(nil)
}

// UnsetResourceType ensures that no value is present for ResourceType, not even an explicit nil
func (o *ActivityReportJsonExportModel) UnsetResourceType() {
	o.ResourceType.Unset()
}

// GetResources returns the Resources field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActivityReportJsonExportModel) GetResources() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActivityReportJsonExportModel) GetResourcesOk() ([]string, bool) {
	if o == nil || IsNil(o.Resources) {
		return nil, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *ActivityReportJsonExportModel) HasResources() bool {
	if o != nil && IsNil(o.Resources) {
		return true
	}

	return false
}

// SetResources gets a reference to the given []string and assigns it to the Resources field.
func (o *ActivityReportJsonExportModel) SetResources(v []string) {
	o.Resources = v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActivityReportJsonExportModel) GetPermissions() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActivityReportJsonExportModel) GetPermissionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *ActivityReportJsonExportModel) HasPermissions() bool {
	if o != nil && IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []string and assigns it to the Permissions field.
func (o *ActivityReportJsonExportModel) SetPermissions(v []string) {
	o.Permissions = v
}

// GetJustification returns the Justification field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActivityReportJsonExportModel) GetJustification() string {
	if o == nil || IsNil(o.Justification.Get()) {
		var ret string
		return ret
	}
	return *o.Justification.Get()
}

// GetJustificationOk returns a tuple with the Justification field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActivityReportJsonExportModel) GetJustificationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Justification.Get(), o.Justification.IsSet()
}

// HasJustification returns a boolean if a field has been set.
func (o *ActivityReportJsonExportModel) HasJustification() bool {
	if o != nil && o.Justification.IsSet() {
		return true
	}

	return false
}

// SetJustification gets a reference to the given NullableString and assigns it to the Justification field.
func (o *ActivityReportJsonExportModel) SetJustification(v string) {
	o.Justification.Set(&v)
}

// SetJustificationNil sets the value for Justification to be an explicit nil
func (o *ActivityReportJsonExportModel) SetJustificationNil() {
	o.Justification.Set(nil)
}

// UnsetJustification ensures that no value is present for Justification, not even an explicit nil
func (o *ActivityReportJsonExportModel) UnsetJustification() {
	o.Justification.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActivityReportJsonExportModel) GetStatus() string {
	if o == nil || IsNil(o.Status.Get()) {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActivityReportJsonExportModel) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *ActivityReportJsonExportModel) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *ActivityReportJsonExportModel) SetStatus(v string) {
	o.Status.Set(&v)
}

// SetStatusNil sets the value for Status to be an explicit nil
func (o *ActivityReportJsonExportModel) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *ActivityReportJsonExportModel) UnsetStatus() {
	o.Status.Unset()
}

// GetTriggerType returns the TriggerType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActivityReportJsonExportModel) GetTriggerType() string {
	if o == nil || IsNil(o.TriggerType.Get()) {
		var ret string
		return ret
	}
	return *o.TriggerType.Get()
}

// GetTriggerTypeOk returns a tuple with the TriggerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActivityReportJsonExportModel) GetTriggerTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TriggerType.Get(), o.TriggerType.IsSet()
}

// HasTriggerType returns a boolean if a field has been set.
func (o *ActivityReportJsonExportModel) HasTriggerType() bool {
	if o != nil && o.TriggerType.IsSet() {
		return true
	}

	return false
}

// SetTriggerType gets a reference to the given NullableString and assigns it to the TriggerType field.
func (o *ActivityReportJsonExportModel) SetTriggerType(v string) {
	o.TriggerType.Set(&v)
}

// SetTriggerTypeNil sets the value for TriggerType to be an explicit nil
func (o *ActivityReportJsonExportModel) SetTriggerTypeNil() {
	o.TriggerType.Set(nil)
}

// UnsetTriggerType ensures that no value is present for TriggerType, not even an explicit nil
func (o *ActivityReportJsonExportModel) UnsetTriggerType() {
	o.TriggerType.Unset()
}

// GetAccessFlow returns the AccessFlow field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ActivityReportJsonExportModel) GetAccessFlow() string {
	if o == nil || IsNil(o.AccessFlow.Get()) {
		var ret string
		return ret
	}
	return *o.AccessFlow.Get()
}

// GetAccessFlowOk returns a tuple with the AccessFlow field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ActivityReportJsonExportModel) GetAccessFlowOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccessFlow.Get(), o.AccessFlow.IsSet()
}

// HasAccessFlow returns a boolean if a field has been set.
func (o *ActivityReportJsonExportModel) HasAccessFlow() bool {
	if o != nil && o.AccessFlow.IsSet() {
		return true
	}

	return false
}

// SetAccessFlow gets a reference to the given NullableString and assigns it to the AccessFlow field.
func (o *ActivityReportJsonExportModel) SetAccessFlow(v string) {
	o.AccessFlow.Set(&v)
}

// SetAccessFlowNil sets the value for AccessFlow to be an explicit nil
func (o *ActivityReportJsonExportModel) SetAccessFlowNil() {
	o.AccessFlow.Set(nil)
}

// UnsetAccessFlow ensures that no value is present for AccessFlow, not even an explicit nil
func (o *ActivityReportJsonExportModel) UnsetAccessFlow() {
	o.AccessFlow.Unset()
}

func (o ActivityReportJsonExportModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActivityReportJsonExportModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.RequestId.IsSet() {
		toSerialize["request_id"] = o.RequestId.Get()
	}
	if o.RequestDate.IsSet() {
		toSerialize["request_date"] = o.RequestDate.Get()
	}
	if o.RequestorName.IsSet() {
		toSerialize["requestor_name"] = o.RequestorName.Get()
	}
	if o.RequestorEmail.IsSet() {
		toSerialize["requestor_email"] = o.RequestorEmail.Get()
	}
	if o.Integration.IsSet() {
		toSerialize["integration"] = o.Integration.Get()
	}
	if o.ResourceType.IsSet() {
		toSerialize["resource_type"] = o.ResourceType.Get()
	}
	if o.Resources != nil {
		toSerialize["resources"] = o.Resources
	}
	if o.Permissions != nil {
		toSerialize["permissions"] = o.Permissions
	}
	if o.Justification.IsSet() {
		toSerialize["justification"] = o.Justification.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.TriggerType.IsSet() {
		toSerialize["trigger_type"] = o.TriggerType.Get()
	}
	if o.AccessFlow.IsSet() {
		toSerialize["access_flow"] = o.AccessFlow.Get()
	}
	return toSerialize, nil
}

type NullableActivityReportJsonExportModel struct {
	value *ActivityReportJsonExportModel
	isSet bool
}

func (v NullableActivityReportJsonExportModel) Get() *ActivityReportJsonExportModel {
	return v.value
}

func (v *NullableActivityReportJsonExportModel) Set(val *ActivityReportJsonExportModel) {
	v.value = val
	v.isSet = true
}

func (v NullableActivityReportJsonExportModel) IsSet() bool {
	return v.isSet
}

func (v *NullableActivityReportJsonExportModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActivityReportJsonExportModel(val *ActivityReportJsonExportModel) *NullableActivityReportJsonExportModel {
	return &NullableActivityReportJsonExportModel{value: val, isSet: true}
}

func (v NullableActivityReportJsonExportModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActivityReportJsonExportModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

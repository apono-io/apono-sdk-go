/*
Apono

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apono

import (
	"encoding/json"
)

// checks if the Connector type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Connector{}

// Connector struct for Connector
type Connector struct {
	ConnectorId   string          `json:"connector_id"`
	LastConnected NullableInstant `json:"last_connected,omitempty"`
	Status        string          `json:"status"`
}

// NewConnector instantiates a new Connector object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnector(connectorId string, status string) *Connector {
	this := Connector{}
	this.ConnectorId = connectorId
	this.Status = status
	return &this
}

// NewConnectorWithDefaults instantiates a new Connector object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectorWithDefaults() *Connector {
	this := Connector{}
	return &this
}

// GetConnectorId returns the ConnectorId field value
func (o *Connector) GetConnectorId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConnectorId
}

// GetConnectorIdOk returns a tuple with the ConnectorId field value
// and a boolean to check if the value has been set.
func (o *Connector) GetConnectorIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectorId, true
}

// SetConnectorId sets field value
func (o *Connector) SetConnectorId(v string) {
	o.ConnectorId = v
}

// GetLastConnected returns the LastConnected field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Connector) GetLastConnected() Instant {
	if o == nil || IsNil(o.LastConnected.Get()) {
		var ret Instant
		return ret
	}
	return *o.LastConnected.Get()
}

// GetLastConnectedOk returns a tuple with the LastConnected field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Connector) GetLastConnectedOk() (*Instant, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastConnected.Get(), o.LastConnected.IsSet()
}

// HasLastConnected returns a boolean if a field has been set.
func (o *Connector) HasLastConnected() bool {
	if o != nil && o.LastConnected.IsSet() {
		return true
	}

	return false
}

// SetLastConnected gets a reference to the given NullableInstant and assigns it to the LastConnected field.
func (o *Connector) SetLastConnected(v Instant) {
	o.LastConnected.Set(&v)
}

// SetLastConnectedNil sets the value for LastConnected to be an explicit nil
func (o *Connector) SetLastConnectedNil() {
	o.LastConnected.Set(nil)
}

// UnsetLastConnected ensures that no value is present for LastConnected, not even an explicit nil
func (o *Connector) UnsetLastConnected() {
	o.LastConnected.Unset()
}

// GetStatus returns the Status field value
func (o *Connector) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *Connector) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *Connector) SetStatus(v string) {
	o.Status = v
}

func (o Connector) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Connector) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["connector_id"] = o.ConnectorId
	if o.LastConnected.IsSet() {
		toSerialize["last_connected"] = o.LastConnected.Get()
	}
	toSerialize["status"] = o.Status
	return toSerialize, nil
}

type NullableConnector struct {
	value *Connector
	isSet bool
}

func (v NullableConnector) Get() *Connector {
	return v.value
}

func (v *NullableConnector) Set(val *Connector) {
	v.value = val
	v.isSet = true
}

func (v NullableConnector) IsSet() bool {
	return v.isSet
}

func (v *NullableConnector) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnector(val *Connector) *NullableConnector {
	return &NullableConnector{value: val, isSet: true}
}

func (v NullableConnector) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnector) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
Apono

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apono

import (
	"encoding/json"
)

// checks if the AccessFlowFilterResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccessFlowFilterResult{}

// AccessFlowFilterResult struct for AccessFlowFilterResult
type AccessFlowFilterResult struct {
	AccessFlowId string         `json:"access_flow_id"`
	Results      []FilterResult `json:"results"`
}

// NewAccessFlowFilterResult instantiates a new AccessFlowFilterResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessFlowFilterResult(accessFlowId string, results []FilterResult) *AccessFlowFilterResult {
	this := AccessFlowFilterResult{}
	this.AccessFlowId = accessFlowId
	this.Results = results
	return &this
}

// NewAccessFlowFilterResultWithDefaults instantiates a new AccessFlowFilterResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessFlowFilterResultWithDefaults() *AccessFlowFilterResult {
	this := AccessFlowFilterResult{}
	return &this
}

// GetAccessFlowId returns the AccessFlowId field value
func (o *AccessFlowFilterResult) GetAccessFlowId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccessFlowId
}

// GetAccessFlowIdOk returns a tuple with the AccessFlowId field value
// and a boolean to check if the value has been set.
func (o *AccessFlowFilterResult) GetAccessFlowIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessFlowId, true
}

// SetAccessFlowId sets field value
func (o *AccessFlowFilterResult) SetAccessFlowId(v string) {
	o.AccessFlowId = v
}

// GetResults returns the Results field value
func (o *AccessFlowFilterResult) GetResults() []FilterResult {
	if o == nil {
		var ret []FilterResult
		return ret
	}

	return o.Results
}

// GetResultsOk returns a tuple with the Results field value
// and a boolean to check if the value has been set.
func (o *AccessFlowFilterResult) GetResultsOk() ([]FilterResult, bool) {
	if o == nil {
		return nil, false
	}
	return o.Results, true
}

// SetResults sets field value
func (o *AccessFlowFilterResult) SetResults(v []FilterResult) {
	o.Results = v
}

func (o AccessFlowFilterResult) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccessFlowFilterResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["access_flow_id"] = o.AccessFlowId
	toSerialize["results"] = o.Results
	return toSerialize, nil
}

type NullableAccessFlowFilterResult struct {
	value *AccessFlowFilterResult
	isSet bool
}

func (v NullableAccessFlowFilterResult) Get() *AccessFlowFilterResult {
	return v.value
}

func (v *NullableAccessFlowFilterResult) Set(val *AccessFlowFilterResult) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessFlowFilterResult) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessFlowFilterResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessFlowFilterResult(val *AccessFlowFilterResult) *NullableAccessFlowFilterResult {
	return &NullableAccessFlowFilterResult{value: val, isSet: true}
}

func (v NullableAccessFlowFilterResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessFlowFilterResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
